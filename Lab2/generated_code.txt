; ModuleID = 'my_module'

declare i32** @main1(i32, i32)

define i32 @main2(i32, i32) {
entry:
  %ctemp1 = alloca float
  %ctemp2 = alloca float
  %load_ctemp2_ = load float, float* %ctemp2
  %flt_op = fadd float 1.000000e+00, %load_ctemp2_
  store float %flt_op, float* %ctemp1
  %load_ctemp1_ = load float, float* %ctemp1
  %load_ctemp1_1 = load float, float* %ctemp1
  %flt_op2 = fmul float %load_ctemp1_, %load_ctemp1_1
  store float %flt_op2, float* %ctemp2
  %load_ctemp1_3 = load float, float* %ctemp1
  %flt_op4 = fsub float %load_ctemp1_3, 5.000000e+00
  store float %flt_op4, float* %ctemp1
  %load_ctemp2_5 = load float, float* %ctemp2
  %load_ctemp1_6 = load float, float* %ctemp1
  %flt_op7 = fdiv float %load_ctemp2_5, %load_ctemp1_6
  store float %flt_op7, float* %ctemp1
  %c = alloca i32
  store i32 0, i32* %c
  %load_c_ = load i32, i32* %c
  %int_op = add i32 %load_c_, 1
  %int_op8 = add i32 %0, 1
  %load_c_9 = load i32, i32* %c
  %int_op10 = add i32 %load_c_9, 1
  %int_cmp = icmp ne i32 %0, 1
  %load_c_11 = load i32, i32* %c
  %int_cmp12 = icmp eq i32 %load_c_11, 0
  %load_c_13 = load i32, i32* %c
  %int_cmp14 = icmp sle i32 %load_c_13, %0
  %a = alloca i32***
  %b = alloca i32**
  store i32*** %b, i32**** %a
  %load_a_ = load i32***, i32**** %a
  %deref = load i32**, i32*** %load_a_
  %deref15 = load i32*, i32** %deref
  %deref16 = load i32, i32* %deref15
  ret i32 %deref16
}

define i32 @main() {
entry:
  %arg1 = alloca i32
  %arg2 = alloca i32
  store i32 0, i32* %arg1
  %load_arg1_ = load i32, i32* %arg1
  %ident_ret = call i32 @main2(i32 0, i32 %load_arg1_)
  store i32 %ident_ret, i32* %arg2
  %load_arg1_1 = load i32, i32* %arg1
  ret i32 %load_arg1_1
}

